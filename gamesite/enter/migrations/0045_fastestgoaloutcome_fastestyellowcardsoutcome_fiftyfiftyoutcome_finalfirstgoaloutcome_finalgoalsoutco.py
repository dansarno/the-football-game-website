# Generated by Django 3.1.3 on 2021-02-05 17:09

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('enter', '0044_auto_20210205_1705'),
    ]

    operations = [
        migrations.CreateModel(
            name='ToWinOutcome',
            fields=[
                ('outcome_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='enter.outcome')),
                ('team', models.ForeignKey(limit_choices_to={'is_top_team': True}, on_delete=django.db.models.deletion.CASCADE, to='enter.team')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('enter.outcome',),
        ),
        migrations.CreateModel(
            name='TournamentRedCardsOutcome',
            fields=[
                ('outcome_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='enter.outcome')),
                ('min_value', models.IntegerField()),
                ('max_value', models.IntegerField()),
                ('is_highest_value', models.BooleanField(default=False)),
                ('tournament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='enter.tournament')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('enter.outcome',),
        ),
        migrations.CreateModel(
            name='TournamentOwnGoalsOutcome',
            fields=[
                ('outcome_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='enter.outcome')),
                ('min_value', models.IntegerField()),
                ('max_value', models.IntegerField()),
                ('is_highest_value', models.BooleanField(default=False)),
                ('tournament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='enter.tournament')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('enter.outcome',),
        ),
        migrations.CreateModel(
            name='TournamentHattricksOutcome',
            fields=[
                ('outcome_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='enter.outcome')),
                ('min_value', models.IntegerField()),
                ('max_value', models.IntegerField()),
                ('is_highest_value', models.BooleanField(default=False)),
                ('tournament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='enter.tournament')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('enter.outcome',),
        ),
        migrations.CreateModel(
            name='TournamentGoalsOutcome',
            fields=[
                ('outcome_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='enter.outcome')),
                ('min_value', models.IntegerField()),
                ('max_value', models.IntegerField()),
                ('is_highest_value', models.BooleanField(default=False)),
                ('tournament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='enter.tournament')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('enter.outcome',),
        ),
        migrations.CreateModel(
            name='ToReachSemiFinalOutcome',
            fields=[
                ('outcome_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='enter.outcome')),
                ('team', models.ForeignKey(limit_choices_to={'is_top_team': True}, on_delete=django.db.models.deletion.CASCADE, to='enter.team')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('enter.outcome',),
        ),
        migrations.CreateModel(
            name='ToReachFinalOutcome',
            fields=[
                ('outcome_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='enter.outcome')),
                ('team', models.ForeignKey(limit_choices_to={'is_top_team': True}, on_delete=django.db.models.deletion.CASCADE, to='enter.team')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('enter.outcome',),
        ),
        migrations.CreateModel(
            name='TopGoalScoringPlayerOutcome',
            fields=[
                ('outcome_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='enter.outcome')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='enter.player')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('enter.outcome',),
        ),
        migrations.CreateModel(
            name='TopGoalScoringGroupOutcome',
            fields=[
                ('outcome_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='enter.outcome')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='enter.group')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('enter.outcome',),
        ),
        migrations.CreateModel(
            name='MostYellowCardsOutcome',
            fields=[
                ('outcome_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='enter.outcome')),
                ('team', models.ForeignKey(limit_choices_to={'is_top_team': True}, on_delete=django.db.models.deletion.CASCADE, to='enter.team')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('enter.outcome',),
        ),
        migrations.CreateModel(
            name='HighestScoringTeamOutcome',
            fields=[
                ('outcome_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='enter.outcome')),
                ('team', models.ForeignKey(limit_choices_to={'is_top_team': True}, on_delete=django.db.models.deletion.CASCADE, to='enter.team')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('enter.outcome',),
        ),
        migrations.CreateModel(
            name='GroupWinnerOutcome',
            fields=[
                ('outcome_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='enter.outcome')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='enter.group')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='enter.team')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('enter.outcome',),
        ),
        migrations.CreateModel(
            name='GroupMatchOutcome',
            fields=[
                ('outcome_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='enter.outcome')),
                ('choice', models.CharField(choices=[('H', 'Home'), ('A', 'Away'), ('D', 'Draw')], max_length=1)),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='enter.groupmatch')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('enter.outcome',),
        ),
        migrations.CreateModel(
            name='FinalYellowCardsOutcome',
            fields=[
                ('outcome_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='enter.outcome')),
                ('min_value', models.IntegerField()),
                ('max_value', models.IntegerField()),
                ('is_highest_value', models.BooleanField(default=False)),
                ('final', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='enter.finalmatch')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('enter.outcome',),
        ),
        migrations.CreateModel(
            name='FinalRefContinentOutcome',
            fields=[
                ('outcome_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='enter.outcome')),
                ('choice', models.CharField(choices=[('EU', 'European'), ('SA', 'South American'), ('OT', 'Other Continent')], max_length=2)),
                ('final', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='enter.finalmatch')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('enter.outcome',),
        ),
        migrations.CreateModel(
            name='FinalOwnGoalOutcome',
            fields=[
                ('outcome_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='enter.outcome')),
                ('choice', models.BooleanField()),
                ('final', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='enter.finalmatch')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('enter.outcome',),
        ),
        migrations.CreateModel(
            name='FinalGoalsOutcome',
            fields=[
                ('outcome_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='enter.outcome')),
                ('min_value', models.IntegerField()),
                ('max_value', models.IntegerField()),
                ('is_highest_value', models.BooleanField(default=False)),
                ('final', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='enter.finalmatch')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('enter.outcome',),
        ),
        migrations.CreateModel(
            name='FinalFirstGoalOutcome',
            fields=[
                ('outcome_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='enter.outcome')),
                ('choice', models.CharField(choices=[('1H', 'First Half'), ('2H', 'Second Half'), ('1E', 'First Half of Extra Time'), ('2E', 'Second Half of Extra Time'), ('PS', 'Penality Shootout')], max_length=2)),
                ('final', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='enter.finalmatch')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('enter.outcome',),
        ),
        migrations.CreateModel(
            name='FiftyFiftyOutcome',
            fields=[
                ('outcome_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='enter.outcome')),
                ('choice', models.BooleanField()),
                ('fifty_fifty', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='enter.fiftyfiftyquestion')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('enter.outcome',),
        ),
        migrations.CreateModel(
            name='FastestYellowCardsOutcome',
            fields=[
                ('outcome_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='enter.outcome')),
                ('team', models.ForeignKey(limit_choices_to={'is_top_team': True}, on_delete=django.db.models.deletion.CASCADE, to='enter.team')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('enter.outcome',),
        ),
        migrations.CreateModel(
            name='FastestGoalOutcome',
            fields=[
                ('outcome_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='enter.outcome')),
                ('team', models.ForeignKey(limit_choices_to={'is_top_team': True}, on_delete=django.db.models.deletion.CASCADE, to='enter.team')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('enter.outcome',),
        ),
    ]
